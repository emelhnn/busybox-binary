name: release

on:
  workflow_dispatch:
    inputs:
      busybox_version:
        description: 'Busybox version'
        required: true
        default: '1.35.0'
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Obtain Busybox source
        run: |
          wget https://busybox.net/downloads/busybox-${{ github.event.inputs.busybox_version }}.tar.bz2
          tar xvf busybox-${{ github.event.inputs.busybox_version }}.tar.bz2
      - name: Obtain CVE patches
        run: |
          cd busybox-${{ github.event.inputs.busybox_version }}
          wget https://raw.githubusercontent.com/supphakitbvn/busybox-binary/master/patches/0001-libbb-sockaddr2str-ensure-only-printable-characters-.patch
          wget https://raw.githubusercontent.com/supphakitbvn/busybox-binary/master/patches/0002-nslookup-sanitize-all-printed-strings-with-printable.patch
          wget https://raw.githubusercontent.com/supphakitbvn/busybox-binary/master/patches/CVE-2022-30065.patch
      - name: Build Busybox
        run: |
          cd busybox-${{ github.event.inputs.busybox_version }}
          for patch in *.patch; do
              patch -p1 < "$patch"
          done
          make defconfig
          sed -i 's/^#.*CONFIG_STATIC.*/CONFIG_STATIC=y/' .config
          sed -i 's/^.*CONFIG_INSTALL_APPLET_SYMLINKS.*/# CONFIG_INSTALL_APPLET_SYMLINKS is not set/' .config
          sed -i 's/^#.*CONFIG_INSTALL_APPLET_DONT.*/CONFIG_INSTALL_APPLET_DONT=y/' .config
          make -j$(nproc)
          make install
          mv _install/bin/busybox ../
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.busybox_version }}
          release_name: Release ${{ github.event.inputs.busybox_version }}
          draft: true
          prerelease: false
      - name: Upload Busybox
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: busybox
          asset_name: busybox
          asset_content_type: application/octet-stream
